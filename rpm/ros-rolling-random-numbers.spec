%{?!ros_distro:%global ros_distro rolling}
%global pkg_name random_numbers
%global normalized_pkg_name %{lua:return (string.gsub(rpm.expand('%{pkg_name}'), '_', '-'))}

Name:           ros-rolling-random-numbers
Version:        2.0.1
Release:        4%{?dist}
Summary:        ROS %{pkg_name} package

License:        BSD
URL:            http://ros.org/wiki/random_numbers
Source0:        %{name}-%{version}.tar.gz

BuildRequires:  bloom-rpm-macros
BuildRequires:  cmake

%{?bloom_package}

%description
This library contains wrappers for generating floating point values, integers,
quaternions using boost libraries. The constructor of the wrapper is guaranteed
to be thread safe and initialize its random number generator to a random seed.
Seeds are obtained using a separate and different random number generator.


%package devel
Release:        %{release}%{?release_suffix}
Summary:        %{summary}
Provides:       %{name}%{?_isa} = %{version}-%{release}
Requires:       %{name}-runtime%{?_isa} = %{version}-%{release}

%description devel
This library contains wrappers for generating floating point values, integers,
quaternions using boost libraries. The constructor of the wrapper is guaranteed
to be thread safe and initialize its random number generator to a random seed.
Seeds are obtained using a separate and different random number generator.


%package runtime
Release:        %{release}
Summary:        %{summary}

%description runtime
This library contains wrappers for generating floating point values, integers,
quaternions using boost libraries. The constructor of the wrapper is guaranteed
to be thread safe and initialize its random number generator to a random seed.
Seeds are obtained using a separate and different random number generator.


%prep
%autosetup -p1


%generate_buildrequires
%bloom_buildrequires


%build
%cmake \
    -UINCLUDE_INSTALL_DIR \
    -ULIB_INSTALL_DIR \
    -USYSCONF_INSTALL_DIR \
    -USHARE_INSTALL_PREFIX \
    -ULIB_SUFFIX \
    -DCMAKE_INSTALL_PREFIX="%{bloom_prefix}" \
    -DAMENT_PREFIX_PATH="%{bloom_prefix}" \
    -DCMAKE_PREFIX_PATH="%{bloom_prefix}" \
    -DSETUPTOOLS_DEB_LAYOUT=OFF \
    -DBUILD_TESTING=OFF \

%cmake3_build


%install
%cmake_install


%if 0%{?with_tests}
%check
# Look for a Makefile target with a name indicating that it runs tests
TEST_TARGET=$(%__make -qp -C %{__cmake_builddir} | sed "s/^\(test\|check\):.*/\\1/;t f;d;:f;q0")
if [ -n "$TEST_TARGET" ]; then
CTEST_OUTPUT_ON_FAILURE=1 \
    %cmake_build $TEST_TARGET || echo "RPM TESTS FAILED"
else echo "RPM TESTS SKIPPED"; fi
%endif


%files devel
%ghost %{bloom_prefix}/share/%{pkg_name}/package.xml


%files runtime
%{bloom_prefix}


%changelog
* Fri Mar 22 2024 Anas M'chichou <anasarrak@erlerobotics.com> - 2.0.1-4
- Autogenerated by Bloom
